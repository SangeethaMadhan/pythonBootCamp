# Defining a list of un sorted array
# Calling the list
# Definition of function:
    # Find the mid index value ad assign it to mid
    # Create two variables left and right
    # Assign 0th index value to the value before mid index to left variable
    # Assign mid index value to last value in the list to right
    # Calling mergesort function for both left and right lists separately
    # Assign three index variables i,j and k for two half list and for the main list
    # Find the minimum values in the list and sort and add remaining values in the list
# Print the mergesorted list


def mergeSort(List):
    if len(List) > 1:
        mid = len(List) // 2
        left = List[:mid]
        right = List[mid:]

        # Recursive call on each half
        mergeSort(left)
        mergeSort(right)

        print(left)
        print(right)

        # Index for two halves
        i = 0
        j = 0
        
        # Index for the main list
        k = 0
        
        while i < len(left) and j < len(right):
            if left[i] <= right[j]:
             
              List[k] = left[i]
              
              i = i + 1
            else:
                List[k] = right[j]
                j = j + 1
           
            k = k + 1

        # For all the remaining values
        while i < len(left):
            List[k] = left[i]
            i = i + 1
            k = k + 1

        while j < len(right):
            List[k]=right[j]
            j = j + 1
            k = k + 1

List = [54,26,93,17,77,31,44,55,20]
mergeSort(List)
print(List)
